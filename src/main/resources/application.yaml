blueberry:
  optimizeActuatorUrl: http://camunda-optimize:9600
  operateActuatorUrl: http://camunda-operate:9600
  tasklistActuatorUrl: http://camunda-tasklist:9600
  zeebeActuatorUrl: http://camunda-zeebe-gateway:9600
  elasticsearchurl: http://camunda-elasticsearch:9200

  # This information is temporary. They must come from the pod itself
  operateRepository: operaterepository
  tasklistRepository: tasklistrepository
  optimizeRepository : optimizerepository
  zeebeRepository: zeeberecordrepository

  kubernetes:
    token: gcloud
    masterUrl: "https"
    certificate-authority-data: ""
    name: ""

  # When repository need to be created, then a base path is used. All based path used
  elasticsearch:
    operateContainerBasePath: /operate
    tasklistContainerBasePath: /tasklist
    optimizeContainerBasePath: /optimize
    zeebeRecordContainerBasePath: /zeeberecord
    # ZeebeRecord need a backup. Here is the name of the backup to be created
    zeebeRecordRepository: camunda_zeebe_records_backup
    zeebeRecordBasePath: zeeberecordbackup

    # Define the container used by Zeebe and by ElasticSearch
  containerAzure:
    containerType: azure
    azure:
      containerName: "YourAzureContainerName"
    s3:
      bucket: "YourS3Bucket"
      region: "us-east-2"
    gcs:
      bucket: "YourS3Bucket"
      region: "us-east-2"


server:
  port: 9082

# -------------------- Self Manage
camunda:
  client:
    mode: self-managed
    zeebe:
      enabled: false
      grpcAddress: http://camunda-zeebe-gateway:26500
      preferRestOverGrpc: false


  operate:
    enabled: false


logging.level.root: INFO


# return message with BAD_REQUEST to the client
server.error.include-message: always

# Spring Boot Configuration
spring.application.name: Blueberry

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
