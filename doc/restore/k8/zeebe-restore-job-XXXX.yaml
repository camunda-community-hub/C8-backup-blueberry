apiVersion: batch/v1
kind: Job
metadata:
  name: zeebe-restore-job-0
spec:
  template:
    spec:
      containers:
      - name: zeebe-restore
        # TODO Adjust based on your Zeebe version
        image: camunda/zeebe:1.0.0
        command: ["/bin/bash", "-c"]
        args:
        - |
          ls -laR /usr/local/zeebe/data;
          rm -rf /usr/local/zeebe/data/* /usr/local/zeebe/data/.*;
          echo "Starting restoration process..."
          ls -laR /usr/local/zeebe/data;
          /usr/local/zeebe/bin/restore --backupId=${ZEEBE_RESTORE_FROM_BACKUP_ID}
          echo "Restoration complete."
        env:
        - name: ZEEBE_RESTORE_FROM_BACKUP_ID
          valueFrom:
            secretKeyRef:
              name: backup-timeid
              key: backupTimeId
        - name: ZEEBE_BROKER_DATA_BACKUP_STORE
          value: "AZURE"
        - name: ZEEBE_BROKER_DATA_BACKUP_AZURE_CONNECTIONSTRING
          value: Def....net
        - name: ZEEBE_BROKER_DATA_BACKUP_AZURE_BASEPATH
          value: zeebecontainer

        - name: ZEEBE_BROKER_CLUSTER_NODEID
          value: "TODO: VALUE-FROM-0-TO-(ClusterSize-1)"
        - name: ZEEBE_BROKER_CLUSTER_PARTITIONSCOUNT
          value: "TODO: NUMBER-OF-PARTITIONS"
        - name: ZEEBE_BROKER_CLUSTER_CLUSTERSIZE
          value: "TODO: ClusterSize"
        - name: ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR
          value: "TODO: Replication Factor"
        volumeMounts:
        - name: data
          mountPath: /usr/local/zeebe/data
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
      securityContext:
        fsGroup: 1000 
      volumes:
      - name: data
        persistentVolumeClaim:
          # TODO VALUE-FROM-0-(ClusterSize-1) - check the PVC (claim name) name in your cluster
          claimName: data-camunda-zeebe-0
      restartPolicy: OnFailure